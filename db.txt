CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE IF NOT EXISTS 'users' ('id' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, 'username' VARCHAR(255) NOT NULL, 'fullname' VARCHAR(255) NOT NULL, 'hash' VARCHAR(255) NOT NULL, 'cash' NUMERIC NOT NULL DEFAULT 0, cof BOOL DEFAULT 0, card_hash VARCHAR(511) DEFAULT NULL);
CREATE TABLE transactions ( id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, sender_id INTEGER NOT NULL, recipient_id INTEGER NOT NULL, amount NUMERIC NOT NULL, date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, msg VARCHAR(511) NOT NULL, confirmed BOOL DEFAULT NULL, FOREIGN KEY (sender_id) REFERENCES users (id), FOREIGN KEY (recipient_id) REFERENCES users (id) );
CREATE TABLE friends ( id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, sender_id INTEGER NOT NULL, recipient_id INTEGER NOT NULL, confirmed BOOL DEFAULT NULL, FOREIGN KEY (sender_id) REFERENCES users (id), FOREIGN KEY (recipient_id) REFERENCES users (id) );
CREATE TABLE convos (
id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
user1_id INTEGER NOT NULL,
user2_id INTEGER NOT NULL,
FOREIGN KEY (user1_id) REFERENCES users(id),
FOREIGN KEY (user2_id) REFERENCES users(id)
);
CREATE TABLE donation_reqs ( id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, requester_id INTEGER NOT NULL, goal NUMERIC DEFAULT NULL, current NUMERIC DEFAULT 0, reached BOOL DEFAULT NULL, title VARCHAR(255) NOT NULL, description VARCHAR(1023) NOT NULL, date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, FOREIGN KEY (requester_id) REFERENCES users(id));
CREATE TABLE donations ( id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, donation_id INTEGER NOT NULL, donor_id INTEGER NOT NULL, amount NUMERIC NOT NULL, FOREIGN KEY (donation_id) REFERENCES donation_reqs(id), FOREIGN KEY (donor_id) REFERENCES users(id) );
CREATE TABLE messages ( id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, convo_id INTEGER NOT NULL, recipient_id INTEGER NOT NULL, sender_id INTEGER NOT NULL, date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, content VARCHAR(255) NOT NULL, FOREIGN KEY (convo_id) REFERENCES convos(id), FOREIGN KEY (recipient_id) REFERENCES users(id), FOREIGN KEY (sender_id) REFERENCES users(id));